{
    "swagger": "2.0",
    "info": {
        "description": "Thunderdome Planning Poker API for both Internal and External use.\nWARNING: Currently not considered stable and is subject to change until 1.0 is released.",
        "title": "Thunderdome API",
        "contact": {
            "name": "Steven Weathers",
            "url": "https://github.com/StevenWeathers/thunderdome-planning-poker"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "BETA"
    },
    "paths": {
        "/active-countries": {
            "get": {
                "description": "Gets a list of users countries",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Active Countries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/apikeys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of users API Keys",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get API Keys",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.UserAPIKey"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/estimation-scales": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of estimation scales",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Get Estimation Scales",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.EstimationScale"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates an estimation scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Create Estimation Scale",
                "parameters": [
                    {
                        "description": "new estimation scale object",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.estimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns created estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/estimation-scales/{scaleId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Update Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the estimation scale ID to update",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "estimation scale object to update",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.estimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Delete Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the estimation scale ID to delete",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns success message",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of organizations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Organization"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/retro-templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retro templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Get Retro Templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.RetroTemplate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a retro template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Create Retro Template",
                "parameters": [
                    {
                        "description": "new retro template object",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.retroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/retro-templates/{templateId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get a specific retro template by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Get Retro Template by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro template ID",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Update Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro template ID to update",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "retro template object to update",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.retroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Delete Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro template ID to delete",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/search/users/email": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of registered users filtered by Email likeness",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Search Registered Users by Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user Email to search for",
                        "name": "search",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get application stats such as count of registered users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Application Stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.ApplicationStats"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/teams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Teams",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Team"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/teams/{teamID}/metrics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get metrics for a specific team such as user count, poker game count, etc.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Team Metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.TeamMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of registered users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Registered Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a registered user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create Registered User",
                "parameters": [
                    {
                        "description": "new user object",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.userCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{userId}/demote": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Demotes a user from admin to registered",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Demote User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to demote",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{userId}/disable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Disable a user from logging in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Disable User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to disable",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{userId}/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable a user to allow login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Enable User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to enable",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{userId}/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the user's password",
                "tags": [
                    "admin"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to update password for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update password object",
                        "name": "passwords",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.updatePasswordRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{userId}/promote/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Promotes a user to admin\nGrants read and write access to administrative information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Promotes User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to promote",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/alerts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of alerts (global notices)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Get Alerts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Alert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates an alert (global notice)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Create Alert",
                "parameters": [
                    {
                        "description": "new alert object",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.alertRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns active alerts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Alert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/alerts/{alertId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Alert",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Update Alert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the alert ID to update",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "alert object to update",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.alertRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns active alerts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Alert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an Alert",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Delete Alert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the alert ID to delete",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns active alerts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Alert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "description": "attempts to log the user in with provided credentials\n*Endpoint only available when Header auth is enabled",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login Header",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "attempts to log the user in with provided credentials\n*Endpoint only available when LDAP and header auth are not enabled",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "user login object",
                        "name": "credentials",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.userLoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Sends a forgot password reset Email to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Forgot Password",
                "parameters": [
                    {
                        "description": "forgot password object",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.forgotPasswordRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/guest": {
            "post": {
                "description": "Registers a user as a guest (non-authenticated)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create Guest User",
                "parameters": [
                    {
                        "description": "guest user object",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.guestUserCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/invite/organization/{inviteId}": {
            "get": {
                "description": "Get a organization user invite details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Organization Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.OrganizationUserInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/invite/team/{inviteId}": {
            "get": {
                "description": "Get a team user invite details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Team Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.TeamUserInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/ldap": {
            "post": {
                "description": "attempts to log the user in with provided credentials\n*Endpoint only available when LDAP is enabled",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login LDAP",
                "parameters": [
                    {
                        "description": "user login object",
                        "name": "credentials",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.userLoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "description": "Logs the user out by deleting session cookies",
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/mfa": {
            "post": {
                "description": "attempts to log the user in with provided MFA token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "MFA Login",
                "parameters": [
                    {
                        "description": "mfa login object",
                        "name": "credentials",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.mfaLoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes MFA requirement from user auth",
                "tags": [
                    "auth"
                ],
                "summary": "Remove MFA",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/mfa/setup/generate": {
            "post": {
                "description": "Generates MFA secret and QR Code",
                "tags": [
                    "auth"
                ],
                "summary": "MFA Setup Generate secret and QR code",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/mfa/setup/validate": {
            "post": {
                "description": "Validates the passcode for the MFA secret",
                "tags": [
                    "auth"
                ],
                "summary": "Validate MFA Setup passcode",
                "parameters": [
                    {
                        "description": "verify object",
                        "name": "verify",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.mfaSetupValidateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a user (authenticated)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "new user object",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.userRegisterRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "patch": {
                "description": "Resets the user's password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "reset password object",
                        "name": "reset",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.resetPasswordRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/update-password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the user's password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "description": "update password object",
                        "name": "passwords",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.updatePasswordRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a users profile by session user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth",
                    "user"
                ],
                "summary": "Get Session User Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "patch": {
                "description": "Updates the users verified Email status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify User",
                "parameters": [
                    {
                        "description": "verify object",
                        "name": "verify",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.verificationRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/battles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of poker games",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Get Poker Games",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only active poker games",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Poker"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/battles/{battleId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get poker game by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Get Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the poker game ID to get",
                        "name": "battleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Poker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a poker game",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Delete Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the poker game ID",
                        "name": "battleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/battles/{battleId}/plans": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a poker story",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Create Poker Story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the poker game ID",
                        "name": "battleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new story object",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.planRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/battles/{battleId}/plans/{planId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a poker story",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Delete Poker Story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the poker game ID",
                        "name": "battleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the story ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/estimation-scales/public": {
            "get": {
                "description": "get list of all public estimation scales",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Get Public Estimation Scales",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.EstimationScale"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/estimation-scales/public/{scaleId}": {
            "get": {
                "description": "get a specific public estimation scale by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Get Public Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Estimation Scale ID",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/maintenance/clean-battles": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes battles older than {config.cleanup_battles_days_old} based on last activity date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Clean Old Battles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/maintenance/clean-guests": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes guest users older than {config.cleanup_guests_days_old} based on last activity date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Clean Old Guests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/maintenance/clean-retros": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes retros older than {config.cleanup_retros_days_old} based on last activity date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Clean Old Retros",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/maintenance/clean-storyboards": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes storyboards older than {config.cleanup_storyboards_days_old} based on last activity date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Clean Old Storyboards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organization/{orgId}/estimation-scales/{scaleId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an Organization Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Delete Organization Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the estimation scale ID to delete",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns success message",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organization/{orgId}/retro-templates/{templateId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Organization Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Update Organization Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the retro template ID to update",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "retro template object to update",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateRetroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an organization with user role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.organizationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated organization object",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Organization"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an Organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Delete Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of organizations departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Departments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID to get departments for",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Department"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an organization department",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create Department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID to create department for",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new department object",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Department"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets an organization department with users role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID to get",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.departmentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an organization department",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update Department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "deptId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated department object",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Department"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Department",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Delete Department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/invites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of user invites associated to the department",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Department User Invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the org ID",
                        "name": "organizationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the dept ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.DepartmentUserInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Invite a department User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Invite Department User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new department user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamInviteUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/invites/{inviteId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user invite from department",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Delete Department User Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the dept ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "invite id",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/teams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a list of organization department teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Department Teams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID to get teams for",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Team"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a department team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create Department Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team object",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Team"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/teams/{teamId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a department team with users role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Department Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.departmentTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/teams/{teamId}/users": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a User to Department Team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Add Department Team User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.addUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of organization department users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Department Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.DepartmentUser"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a department User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Add Department User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new department user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.addUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/departments/{departmentId}/users/{userId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a department User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update Department User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "department user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamUpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a department User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Remove Department User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/estimation-scales": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of estimation scales for a specific organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Get Organization Estimation Scales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.EstimationScale"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates an estimation scale for a specific organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Create Organization Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new estimation scale object",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateEstimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns created estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/invites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of user invites associated to the organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization User Invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the org ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.OrganizationUserInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Invite user to organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Invite Org User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new organization user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamInviteUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/invites/{inviteId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user invite from organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Delete Org User Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "invite id",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/metrics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get metrics for a specific organization such as user count, team count, etc.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Organization Metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organizationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.OrganizationMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/retro-templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retro templates for an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Get Organization Retro Templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.RetroTemplate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates an Organization retro template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Create Organization Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new retro template object",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateRetroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/retro-templates/{templateId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an Organization Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Delete Organization Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the Organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the retro template ID to delete",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/teams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of organization teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization Teams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Team"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create organization team with current user as admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create Organization Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team object",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Team"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/teams/{teamId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an organizations team with users roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "team id",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.orgTeamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/teams/{teamId}/users": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add user to organization team as long as they are already in the organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Add Org Team User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "team id",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.addUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get a list of organization users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{orgId}/users/{userId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update organization user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update Org User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "organization user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamUpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove user from organization including departments and teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Remove Org User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization id",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retro-templates/public": {
            "get": {
                "description": "get list of public retro templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Get Public Retro Templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.RetroTemplate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retros",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Get Retros",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only active retros",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Retro"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros/{retroId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get retro by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Get Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID to get",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Retro"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a retro",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros/{retroId}/actions/{actionId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a retro action item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Item Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated action item",
                        "name": "actionItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.actionUpdateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a retro action item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Item Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros/{retroId}/actions/{actionId}/assignees": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a retro action assignee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Add Assignee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated action item",
                        "name": "actionItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.actionAddAssigneeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove an assignee from a retro action",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Remove Assignee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated action item",
                        "name": "actionItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.actionRemoveAssigneeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros/{retroId}/actions/{actionId}/comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a comment to a retro action item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Item Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "action comment",
                        "name": "actionItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.actionCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/retros/{retroId}/actions/{actionId}/comments/{commentId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit a retro action item comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Item Comment Edit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "action comment",
                        "name": "actionItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.actionCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a comment from a retro action item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Retro Action Item Comment Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the action ID",
                        "name": "actionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of storyboards",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Get Storyboards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only active storyboards",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Storyboard"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards/{storyboardId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get storyboard by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Get Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID to get",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Storyboard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a storyboard",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Storyboard Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards/{storyboardId}/columns": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a column to a storyboard goal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Storyboard Column Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body for adding a column",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardColumnAddRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards/{storyboardId}/goals": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a goal to a storyboard",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Storyboard Goal Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the goal to add",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardGoalAddRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards/{storyboardId}/stories": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a story to a storyboard goal column",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Storyboard Story Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body for adding a story",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardStoryAddRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/storyboards/{storyboardId}/stories/{storyId}/move": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Move a story in a storyboard",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Storyboard Story Move",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the story ID",
                        "name": "storyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "target goal column and place before story",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardStoryMoveRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Get Subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Subscription"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a subscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Create Subscription",
                "parameters": [
                    {
                        "description": "new subscription object",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.subscriptionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Subscription"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a subscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Get Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the subscription ID",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Subscription"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Subscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Update Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the subscription ID to update",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "subscription object to update",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.subscriptionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Subscription"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a Subscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Delete Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the subscription ID to delete",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/team/{teamId}/estimation-scales/{scaleId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an Team Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Delete Team Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the estimation scale ID to delete",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns success message",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{orgId}/estimation-scales/{scaleId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an Organization Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Update Organization Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "orgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the estimation scale ID to update",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "estimation scale object to update",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateEstimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a team with user role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.teamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Update Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated team object",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Team"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Delete Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/battles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of battles associated to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team Battles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Poker"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/battles/{battleId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a battle from the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Remove Team Poker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the battle ID",
                        "name": "battleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/checkins": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of team checkins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team Checkins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the timezone name e.g. America/New_York",
                        "name": "tz",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.TeamCheckin"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a team user checkin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Create Team Checkin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new check in object",
                        "name": "checkin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.checkinCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/checkins/users/{userId}/last": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Users last checkin for team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Users last checkin for team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user id to get last checkin for",
                        "name": "userId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.TeamCheckin"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/checkins/{checkinId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a team user checkin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Update Team Checkin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the checkin ID",
                        "name": "checkinId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated check in object",
                        "name": "checkin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.checkinUpdateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a team user checkin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Delete Team Checkin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the checkin ID",
                        "name": "checkinId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/checkins/{checkinId}/comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a team user checkin comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Create Team Checkin Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the checkin ID",
                        "name": "checkinId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "comment object",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.checkinCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/checkins/{checkinId}/comments/{commentId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits a team user checkin comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Edit Team Checkin Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the checkin ID",
                        "name": "checkinId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "comment object",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.checkinCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a team user checkin comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Delete Team Checkin Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the checkin ID",
                        "name": "checkinId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/estimation-scales": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of estimation scales for a specific team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Get Team Estimation Scales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.EstimationScale"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates an estimation scale for a specific team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Create Team Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new estimation scale object",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateEstimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns created estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/estimation-scales/{scaleId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Team Estimation Scale",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "estimation-scale"
                ],
                "summary": "Update Team Estimation Scale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the estimation scale ID to update",
                        "name": "scaleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "estimation scale object to update",
                        "name": "scale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateEstimationScaleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated estimation scale",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.EstimationScale"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/invites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of user invites associated to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team User Invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.TeamUserInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Invites a user to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Invite Team User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamInviteUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/invites/{inviteId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a user invite from the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Deletes Team User Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/retro-actions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retro actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Retro Actions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only completed retro actions",
                        "name": "completed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.RetroAction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/retro-templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retro templates for a team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Get Team Retro Templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.RetroTemplate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a Team retro template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Create Team Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new retro template object",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateRetroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/retro-templates/{templateId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Team Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Update Team Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the retro template ID to update",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "retro template object to update",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.privateRetroTemplateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.RetroTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a Team Retro Template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retroTemplate"
                ],
                "summary": "Delete Team Retro Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the retro template ID to delete",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/retros": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of retros associated to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team Retros",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Retro"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/retros/{retroId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a retro from the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Remove Team Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the retro ID",
                        "name": "retroId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/storyboards": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of storyboards associated to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team Storyboards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Storyboard"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/storyboards/{storyboardId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a storyboard from the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Remove Team Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the storyboard ID",
                        "name": "storyboardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of users associated to the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get Team users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/users/{userId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a team user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Update Team User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated team user object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamUpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a user from the team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Remove Team User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/users/{userId}/battles": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a poker game associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Create Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new poker game object",
                        "name": "battle",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.battleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Poker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/users/{userId}/retros": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a retro associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Create Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new retro object",
                        "name": "retro",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.retroCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Retro"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}/users/{userId}/storyboards": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a storyboard associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Create Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new storyboard object",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Storyboard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a users profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a users profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the user profile object to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.userprofileUpdateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/apikeys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of API keys for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apikey"
                ],
                "summary": "Get API Keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to get API keys for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.APIKey"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates an API key for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apikey"
                ],
                "summary": "Generate API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to generate API key for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new APIKey key object",
                        "name": "key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.apikeyGenerateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.APIKey"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/apikeys/{keyID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the API key of the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apikey"
                ],
                "summary": "Update API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the API Key ID to update",
                        "name": "keyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "APIKey key object to update",
                        "name": "key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.apikeyUpdateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.APIKey"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes the API key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apikey"
                ],
                "summary": "Delete API Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "the API Key ID to update",
                        "name": "keyID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.APIKey"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/battles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of poker games for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Get PokerGames",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to get poker games for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Poker"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a poker game associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Create Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new poker game object",
                        "name": "battle",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.battleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Poker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/credential": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a users credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Credential"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/invite/department/{inviteId}": {
            "post": {
                "description": "Processes an department invite for the user",
                "tags": [
                    "user"
                ],
                "summary": "User Department Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/invite/organization/{inviteId}": {
            "post": {
                "description": "Processes an organization invite for the user",
                "tags": [
                    "user"
                ],
                "summary": "User Organization Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/invite/team/{inviteId}": {
            "post": {
                "description": "Processes a team invite for the user",
                "tags": [
                    "user"
                ],
                "summary": "User Team Invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the invite ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/jira-instances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of Jira instances associated to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jira"
                ],
                "summary": "Get User Jira Instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to find jira instances for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.JiraInstance"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a Jira Instance associated to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jira"
                ],
                "summary": "Create Jira Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to associate jira instance to",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new jira_instance object",
                        "name": "jira",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.jiraInstanceRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns new jira instance",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.JiraInstance"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/jira-instances/{instanceId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a Jira Instance associated to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jira"
                ],
                "summary": "Update Jira Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID jira instance associated to",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the jira_instance ID to update",
                        "name": "instanceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updated jira_instance object",
                        "name": "jira",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.jiraInstanceRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated jira instance",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.JiraInstance"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a Jira Instance associated to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jira"
                ],
                "summary": "Delete Jira Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID jira instance associated to",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the jira_instance ID to delete",
                        "name": "instanceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/jira-instances/{instanceId}/jql-story-search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Queries Jira Instance API for Stories by JQL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jira"
                ],
                "summary": "Query Jira for Stories by JQL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID associated to jira instance",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the jira_instance ID to query",
                        "name": "instanceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "jql search request",
                        "name": "jira",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.jiraStoryJQLSearchRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of organizations for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Users Organizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to get organizations for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.UserOrganization"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create organization with current user as admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new organization object",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Organization"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/request-verify": {
            "post": {
                "description": "Sends verification Email",
                "tags": [
                    "user"
                ],
                "summary": "Request Verification Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/retros": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of retros for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Get Retros by User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to get retros for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Retro"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a retro associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Create Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new retro object",
                        "name": "retro",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.retroCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Retro"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/storyboards": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of storyboards for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Get Storyboards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID to get storyboards for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Starting point to return rows from, should be multiplied by limit or 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Storyboard"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a storyboard associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Create Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new storyboard object",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Storyboard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of active entity user subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Get Entity User Active Subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the entity user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Subscription"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/subscriptions/{subscriptionId}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get list of active entity user subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "Update Entity User Subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the entity user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the subscription ID to update",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update subscription association object",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.subscriptionAssociateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.Subscription"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/teams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of teams the user is a part of",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get User Teams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.UserTeam"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a team with the current user as the team admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Create Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new team object",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.teamCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Team"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/teams-non-org": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of teams the user is a part of that are not associated with an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "summary": "Get User Teams Non Org",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/thunderdome.UserTeam"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/departments/{departmentId}/teams/{teamId}/users/{userId}/battles": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a poker game associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Create Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new poker game object",
                        "name": "battle",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.battleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Poker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/departments/{departmentId}/teams/{teamId}/users/{userId}/retros": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a retro associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Create Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new retro object",
                        "name": "retro",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.retroCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Retro"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/departments/{departmentId}/teams/{teamId}/users/{userId}/storyboards": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a storyboard associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Create Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the department ID",
                        "name": "departmentId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new storyboard object",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Storyboard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/teams/{teamId}/users/{userId}/battles": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a poker game associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "poker"
                ],
                "summary": "Create Poker Game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new poker game object",
                        "name": "battle",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.battleRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Poker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/teams/{teamId}/users/{userId}/retros": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a retro associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "retro"
                ],
                "summary": "Create Retro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new retro object",
                        "name": "retro",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.retroCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Retro"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        },
        "/{orgId}/teams/{teamId}/users/{userId}/storyboards": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a storyboard associated to the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storyboard"
                ],
                "summary": "Create Storyboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the organization ID",
                        "name": "orgId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "the team ID",
                        "name": "teamId",
                        "in": "path"
                    },
                    {
                        "description": "new storyboard object",
                        "name": "storyboard",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/http.storyboardCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.standardJsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/thunderdome.Storyboard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.standardJsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.actionAddAssigneeRequestBody": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "http.actionCommentRequestBody": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "http.actionRemoveAssigneeRequestBody": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "http.actionUpdateRequestBody": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": false
                },
                "content": {
                    "type": "string",
                    "example": "update documentation"
                }
            }
        },
        "http.addUserRequestBody": {
            "type": "object",
            "required": [
                "role",
                "user_id"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "MEMBER",
                        "ADMIN"
                    ]
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "http.alertRequestBody": {
            "type": "object",
            "required": [
                "content",
                "name",
                "type"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "allowDismiss": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registeredOnly": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        " INFO",
                        " NEW",
                        " SUCCESS",
                        " WARNING"
                    ]
                }
            }
        },
        "http.apikeyGenerateRequestBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.apikeyUpdateRequestBody": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                }
            }
        },
        "http.battleRequestBody": {
            "type": "object",
            "required": [
                "name",
                "pointAverageRounding",
                "pointValuesAllowed"
            ],
            "properties": {
                "autoFinishVoting": {
                    "type": "boolean"
                },
                "battleLeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "estimationScaleId": {
                    "type": "string"
                },
                "hideVoterIdentity": {
                    "type": "boolean"
                },
                "joinCode": {
                    "type": "string"
                },
                "leaderCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.Story"
                    }
                },
                "pointAverageRounding": {
                    "type": "string",
                    "enum": [
                        "ceil",
                        "round",
                        "floor"
                    ]
                },
                "pointValuesAllowed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.checkinCommentRequestBody": {
            "type": "object",
            "required": [
                "comment",
                "userId"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "http.checkinCreateRequestBody": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "blockers": {
                    "type": "string"
                },
                "discuss": {
                    "type": "string"
                },
                "goalsMet": {
                    "type": "boolean"
                },
                "today": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "yesterday": {
                    "type": "string"
                }
            }
        },
        "http.checkinUpdateRequestBody": {
            "type": "object",
            "properties": {
                "blockers": {
                    "type": "string"
                },
                "discuss": {
                    "type": "string"
                },
                "goalsMet": {
                    "type": "boolean"
                },
                "today": {
                    "type": "string"
                },
                "yesterday": {
                    "type": "string"
                }
            }
        },
        "http.departmentResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/thunderdome.Department"
                },
                "departmentRole": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/thunderdome.Organization"
                },
                "organizationRole": {
                    "type": "string"
                }
            }
        },
        "http.departmentTeamResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/thunderdome.Department"
                },
                "departmentRole": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/thunderdome.Organization"
                },
                "organizationRole": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/thunderdome.Team"
                },
                "teamRole": {
                    "type": "string"
                }
            }
        },
        "http.estimationScaleRequestBody": {
            "type": "object",
            "required": [
                "name",
                "scaleType",
                "values"
            ],
            "properties": {
                "defaultScale": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "scaleType": {
                    "type": "string",
                    "enum": [
                        "modified_fibonacci",
                        "fibonacci",
                        "t_shirt",
                        "powers_of_two",
                        "custom"
                    ]
                },
                "values": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.forgotPasswordRequestBody": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "http.guestUserCreateRequestBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.jiraInstanceRequestBody": {
            "type": "object",
            "required": [
                "access_token",
                "client_mail",
                "host"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "client_mail": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                }
            }
        },
        "http.jiraStoryJQLSearchRequestBody": {
            "type": "object",
            "required": [
                "jql"
            ],
            "properties": {
                "jql": {
                    "type": "string"
                },
                "maxResults": {
                    "type": "integer"
                },
                "startAt": {
                    "type": "integer"
                }
            }
        },
        "http.loginResponse": {
            "type": "object",
            "properties": {
                "mfaRequired": {
                    "type": "boolean"
                },
                "sessionId": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/thunderdome.User"
                }
            }
        },
        "http.mfaLoginRequestBody": {
            "type": "object",
            "required": [
                "passcode",
                "sessionId"
            ],
            "properties": {
                "passcode": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "http.mfaSetupValidateRequestBody": {
            "type": "object",
            "required": [
                "passcode",
                "secret"
            ],
            "properties": {
                "passcode": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "http.orgTeamResponse": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/thunderdome.Organization"
                },
                "organizationRole": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/thunderdome.Team"
                },
                "teamRole": {
                    "type": "string"
                }
            }
        },
        "http.organizationResponse": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/thunderdome.Organization"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "http.planRequestBody": {
            "type": "object",
            "properties": {
                "acceptanceCriteria": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "referenceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "http.privateEstimationScaleRequestBody": {
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "properties": {
                "defaultScale": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.privateRetroTemplateRequestBody": {
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "properties": {
                "defaultTemplate": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/http.retroTemplateFormatRequestBody"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.resetPasswordRequestBody": {
            "type": "object",
            "required": [
                "password1",
                "password2",
                "resetId"
            ],
            "properties": {
                "password1": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                },
                "password2": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                },
                "resetId": {
                    "type": "string"
                }
            }
        },
        "http.retroCreateRequestBody": {
            "type": "object",
            "required": [
                "brainstormVisibility",
                "maxVotes",
                "retroName"
            ],
            "properties": {
                "allowCumulativeVoting": {
                    "type": "boolean"
                },
                "brainstormVisibility": {
                    "type": "string",
                    "enum": [
                        "visible",
                        "concealed",
                        "hidden"
                    ]
                },
                "facilitatorCode": {
                    "type": "string",
                    "example": "likeaboss"
                },
                "joinCode": {
                    "type": "string",
                    "example": "iammadmax"
                },
                "maxVotes": {
                    "type": "integer",
                    "maximum": 9,
                    "minimum": 1
                },
                "phaseAutoAdvance": {
                    "type": "boolean"
                },
                "phaseTimeLimitMin": {
                    "type": "integer",
                    "maximum": 59,
                    "minimum": 0,
                    "example": 10
                },
                "retroName": {
                    "type": "string",
                    "example": "sprint 10 retro"
                },
                "templateId": {
                    "type": "string"
                }
            }
        },
        "http.retroTemplateFormatRequestBody": {
            "type": "object",
            "required": [
                "columns"
            ],
            "properties": {
                "columns": {
                    "type": "array",
                    "maxItems": 5,
                    "minItems": 2,
                    "items": {
                        "type": "object",
                        "required": [
                            "label",
                            "name"
                        ],
                        "properties": {
                            "color": {
                                "type": "string",
                                "enum": [
                                    "red",
                                    "green",
                                    "blue",
                                    "yellow",
                                    "purple",
                                    "orange",
                                    "teal"
                                ]
                            },
                            "icon": {
                                "type": "string",
                                "enum": [
                                    "smiley",
                                    "frown",
                                    "angry",
                                    "question"
                                ]
                            },
                            "label": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1
                            }
                        }
                    }
                }
            }
        },
        "http.retroTemplateRequestBody": {
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "properties": {
                "defaultTemplate": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/http.retroTemplateFormatRequestBody"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            }
        },
        "http.standardJsonResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "string"
                },
                "meta": {
                    "type": "object"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.storyboardColumnAddRequestBody": {
            "type": "object",
            "required": [
                "goalId"
            ],
            "properties": {
                "goalId": {
                    "type": "string"
                }
            }
        },
        "http.storyboardCreateRequestBody": {
            "type": "object",
            "required": [
                "storyboardName"
            ],
            "properties": {
                "facilitatorCode": {
                    "type": "string"
                },
                "joinCode": {
                    "type": "string"
                },
                "storyboardName": {
                    "type": "string"
                }
            }
        },
        "http.storyboardGoalAddRequestBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "http.storyboardStoryAddRequestBody": {
            "type": "object",
            "required": [
                "columnId",
                "goalId"
            ],
            "properties": {
                "columnId": {
                    "type": "string"
                },
                "goalId": {
                    "type": "string"
                }
            }
        },
        "http.storyboardStoryMoveRequestBody": {
            "type": "object",
            "required": [
                "columnId",
                "goalId"
            ],
            "properties": {
                "columnId": {
                    "type": "string"
                },
                "goalId": {
                    "type": "string"
                },
                "placeBefore": {
                    "type": "string"
                }
            }
        },
        "http.subscriptionAssociateRequestBody": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                }
            }
        },
        "http.subscriptionRequestBody": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "customer_id": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "user",
                        " team",
                        " organization"
                    ]
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "http.teamCreateRequestBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.teamInviteUserRequestBody": {
            "type": "object",
            "required": [
                "email",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "MEMBER",
                        "ADMIN"
                    ]
                }
            }
        },
        "http.teamResponse": {
            "type": "object",
            "properties": {
                "team": {
                    "$ref": "#/definitions/thunderdome.Team"
                },
                "teamRole": {
                    "type": "string"
                }
            }
        },
        "http.teamUpdateUserRequestBody": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "MEMBER",
                        "ADMIN"
                    ]
                }
            }
        },
        "http.updatePasswordRequestBody": {
            "type": "object",
            "required": [
                "password1",
                "password2"
            ],
            "properties": {
                "password1": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                },
                "password2": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                }
            }
        },
        "http.userCreateRequestBody": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password1",
                "password2"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password1": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                },
                "password2": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                }
            }
        },
        "http.userLoginRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                }
            }
        },
        "http.userRegisterRequestBody": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password1",
                "password2"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password1": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                },
                "password2": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 6
                }
            }
        },
        "http.userprofileUpdateRequestBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "maxLength": 128
                },
                "company": {
                    "type": "string",
                    "maxLength": 256
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "jobTitle": {
                    "type": "string",
                    "maxLength": 128
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 64
                },
                "notificationsEnabled": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string",
                    "maxLength": 5
                }
            }
        },
        "http.verificationRequestBody": {
            "type": "object",
            "required": [
                "verifyId"
            ],
            "properties": {
                "verifyId": {
                    "type": "string"
                }
            }
        },
        "thunderdome.APIKey": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "apiKey": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Alert": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "allowDismiss": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registeredOnly": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.ApplicationStats": {
            "type": "object",
            "properties": {
                "activeBattleCount": {
                    "type": "integer"
                },
                "activeBattleUserCount": {
                    "type": "integer"
                },
                "activeRetroCount": {
                    "type": "integer"
                },
                "activeRetroUserCount": {
                    "type": "integer"
                },
                "activeStoryboardCount": {
                    "type": "integer"
                },
                "activeStoryboardUserCount": {
                    "type": "integer"
                },
                "apikeyCount": {
                    "type": "integer"
                },
                "battleCount": {
                    "type": "integer"
                },
                "departmentCount": {
                    "type": "integer"
                },
                "estimationScaleCount": {
                    "type": "integer"
                },
                "orgSubscriptionActiveCount": {
                    "type": "integer"
                },
                "organizationCount": {
                    "type": "integer"
                },
                "organizationEstimationScaleCount": {
                    "type": "integer"
                },
                "organizationRetroTemplateCount": {
                    "type": "integer"
                },
                "planCount": {
                    "type": "integer"
                },
                "publicEstimationScaleCount": {
                    "type": "integer"
                },
                "publicRetroTemplateCount": {
                    "type": "integer"
                },
                "registeredUserCount": {
                    "type": "integer"
                },
                "retroActionCount": {
                    "type": "integer"
                },
                "retroCount": {
                    "type": "integer"
                },
                "retroItemCount": {
                    "type": "integer"
                },
                "retroTemplateCount": {
                    "type": "integer"
                },
                "storyboardColumnCount": {
                    "type": "integer"
                },
                "storyboardCount": {
                    "type": "integer"
                },
                "storyboardGoalCount": {
                    "type": "integer"
                },
                "storyboardPersonaCount": {
                    "type": "integer"
                },
                "storyboardStoryCount": {
                    "type": "integer"
                },
                "teamCheckinsCount": {
                    "type": "integer"
                },
                "teamCount": {
                    "type": "integer"
                },
                "teamEstimationScaleCount": {
                    "type": "integer"
                },
                "teamRetroTemplateCount": {
                    "type": "integer"
                },
                "teamSubscriptionActiveCount": {
                    "type": "integer"
                },
                "unregisteredUserCount": {
                    "type": "integer"
                },
                "userSubscriptionActiveCount": {
                    "type": "integer"
                }
            }
        },
        "thunderdome.CheckinComment": {
            "type": "object",
            "properties": {
                "checkin_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Color": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "legend": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Credential": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "thunderdome.Department": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.DepartmentUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "thunderdome.DepartmentUserInvite": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "invite_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "thunderdome.EstimationScale": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "defaultScale": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "scaleType": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "thunderdome.JiraInstance": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "client_mail": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Organization": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.OrganizationMetrics": {
            "type": "object",
            "properties": {
                "department_count": {
                    "type": "integer"
                },
                "estimation_scale_count": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "poker_count": {
                    "type": "integer"
                },
                "retro_count": {
                    "type": "integer"
                },
                "retro_template_count": {
                    "type": "integer"
                },
                "storyboard_count": {
                    "type": "integer"
                },
                "team_checkin_count": {
                    "type": "integer"
                },
                "team_count": {
                    "type": "integer"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "thunderdome.OrganizationUserInvite": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "invite_id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Poker": {
            "type": "object",
            "properties": {
                "activePlanId": {
                    "type": "string"
                },
                "autoFinishVoting": {
                    "type": "boolean"
                },
                "createdDate": {
                    "type": "string"
                },
                "estimationScale": {
                    "$ref": "#/definitions/thunderdome.EstimationScale"
                },
                "estimationScaleId": {
                    "type": "string"
                },
                "hideVoterIdentity": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "joinCode": {
                    "type": "string"
                },
                "leaderCode": {
                    "type": "string"
                },
                "leaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.Story"
                    }
                },
                "pointAverageRounding": {
                    "type": "string"
                },
                "pointValuesAllowed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamId": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.PokerUser"
                    }
                },
                "votingLocked": {
                    "type": "boolean"
                }
            }
        },
        "thunderdome.PokerUser": {
            "type": "object",
            "properties": {
                "abandoned": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "avatar": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "spectator": {
                    "type": "boolean"
                }
            }
        },
        "thunderdome.Retro": {
            "type": "object",
            "properties": {
                "actionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroAction"
                    }
                },
                "allowCumulativeVoting": {
                    "type": "boolean"
                },
                "brainstormVisibility": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "facilitatorCode": {
                    "type": "string"
                },
                "facilitators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroGroup"
                    }
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroItem"
                    }
                },
                "joinCode": {
                    "type": "string"
                },
                "maxVotes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "phase_auto_advance": {
                    "type": "boolean"
                },
                "phase_time_limit_min": {
                    "type": "integer"
                },
                "phase_time_start": {
                    "type": "string"
                },
                "readyUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamId": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/thunderdome.RetroTemplate"
                },
                "template_id": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroUser"
                    }
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroVote"
                    }
                }
            }
        },
        "thunderdome.RetroAction": {
            "type": "object",
            "properties": {
                "assignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.User"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroActionComment"
                    }
                },
                "completed": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "retroId": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroActionComment": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroItem": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroItemComment"
                    }
                },
                "content": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroItemComment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroTemplate": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "defaultTemplate": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/thunderdome.RetroTemplateFormat"
                },
                "id": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroTemplateFormat": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.RetroTemplateFormatColumn"
                    }
                }
            }
        },
        "thunderdome.RetroTemplateFormatColumn": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroUser": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                }
            }
        },
        "thunderdome.RetroVote": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "groupId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Story": {
            "type": "object",
            "properties": {
                "acceptanceCriteria": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "referenceId": {
                    "type": "string"
                },
                "skipped": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "voteEndTime": {
                    "type": "string"
                },
                "voteStartTime": {
                    "type": "string"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.Vote"
                    }
                }
            }
        },
        "thunderdome.StoryComment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "story_id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Storyboard": {
            "type": "object",
            "properties": {
                "color_legend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.Color"
                    }
                },
                "createdDate": {
                    "type": "string"
                },
                "facilitatorCode": {
                    "type": "string"
                },
                "facilitators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardGoal"
                    }
                },
                "id": {
                    "type": "string"
                },
                "joinCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "personas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardPersona"
                    }
                },
                "teamId": {
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardUser"
                    }
                }
            }
        },
        "thunderdome.StoryboardColumn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "personas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardPersona"
                    }
                },
                "sort_order": {
                    "type": "string"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardStory"
                    }
                }
            }
        },
        "thunderdome.StoryboardGoal": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardColumn"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "personas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryboardPersona"
                    }
                },
                "sort_order": {
                    "type": "string"
                }
            }
        },
        "thunderdome.StoryboardPersona": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "thunderdome.StoryboardStory": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "closed": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.StoryComment"
                    }
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "sort_order": {
                    "type": "string"
                }
            }
        },
        "thunderdome.StoryboardUser": {
            "type": "object",
            "properties": {
                "abandoned": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "avatar": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Subscription": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_date": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/thunderdome.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Team": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.TeamCheckin": {
            "type": "object",
            "properties": {
                "blockers": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thunderdome.CheckinComment"
                    }
                },
                "createdDate": {
                    "type": "string"
                },
                "discuss": {
                    "type": "string"
                },
                "goalsMet": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "today": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/thunderdome.TeamUser"
                },
                "yesterday": {
                    "type": "string"
                }
            }
        },
        "thunderdome.TeamMetrics": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "department_name": {
                    "type": "string"
                },
                "estimation_scale_count": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "poker_count": {
                    "type": "integer"
                },
                "retro_count": {
                    "type": "integer"
                },
                "retro_template_count": {
                    "type": "integer"
                },
                "storyboard_count": {
                    "type": "integer"
                },
                "team_checkin_count": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "thunderdome.TeamUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "thunderdome.TeamUserInvite": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "invite_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                }
            }
        },
        "thunderdome.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "gravatarHash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobTitle": {
                    "type": "string"
                },
                "lastActive": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notificationsEnabled": {
                    "type": "boolean"
                },
                "picture": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "thunderdome.UserAPIKey": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "apiKey": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "thunderdome.UserOrganization": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.UserTeam": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "thunderdome.Vote": {
            "type": "object",
            "properties": {
                "vote": {
                    "type": "string"
                },
                "warriorId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}