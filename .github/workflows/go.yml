name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ "18.5.0" ]
        go-version: [ "1.20" ]
        db-host:
          - 127.0.0.1

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: "thunderdome"
          POSTGRES_USER: "thor"
          POSTGRES_PASSWORD: "odinson"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - run: npm ci --no-optional
      - run: npm test
      - run: npm run build
        env:
          CI: true

      - name: Get dependencies
        run: |
          go mod download
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
          go install github.com/swaggo/swag/cmd/swag@v1.7.4

      - name: Generate swagger docs
        run: swag init -g api/api.go -o swaggerdocs

      - name: Test
        run: go test `go list ./... | grep -v swaggerdocs`

      - name: Build
        run: go build -v .

      #      - name: golangci-lint
      #        uses: golangci/golangci-lint-action@v3
      #        with:
      #          version: v1.29

      - name: Run Thunderdome application
        run: ./thunderdome-planning-poker &
        env:
          DB_HOST: ${{ matrix.db-host }}
          APP_DOMAIN: ".127.0.0.1"
          COOKIE_SECURE: "false"

      - name: Install Playwright dependencies
        working-directory: ./e2e
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./e2e
        run: npx playwright test
        env:
          DB_HOST: ${{ matrix.db-host }}

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30


