name: build

on:
  workflow_call:

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ "20.12.0" ]
        go-version: [ "1.22" ]
        db-host:
          - 127.0.0.1

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: "thunderdome"
          POSTGRES_USER: "thor"
          POSTGRES_PASSWORD: "odinson"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            ui/package-lock.json
            e2e/package-lock.json

      - run: npm ci --no-optional
        working-directory: ui
      - run: npm run build
        working-directory: ui
        env:
          CI: true

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: go build -v .

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ui/dist
            docs/swagger

      - name: Run Thunderdome application
        run: ./thunderdome-planning-poker &
        env:
          DB_HOST: ${{ matrix.db-host }}
          APP_DOMAIN: ".127.0.0.1"
          COOKIE_SECURE: "false"

      - name: Install Playwright dependencies
        working-directory: ./e2e
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./e2e
        run: npx playwright test
        env:
          DB_HOST: ${{ matrix.db-host }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30


