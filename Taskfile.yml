version: '3'

vars:
  BINARY_NAME: thunderdome-planning-poker
  BINARY_LINUX: thunderdome-planning-poker_unix
  BINARY_WINDOWS: thunderdome-planning-poker.exe
  SWAGGER_DOCS_DIR: docs/swagger

tasks:
  install:
    cmds:
      - go mod download
      - npm ci --prefix ui

  update-ui-deps:
    cmds:
      - npm update --prefix ui

  update-go-deps:
    cmds:
      - go get -u ./...

  clean:
    cmds:
      - rm -f {{.BINARY_NAME}}
      - rm -f {{.BINARY_LINUX}}
      - rm -f {{.BINARY_WINDOWS}}
      - rm -rf ui/dist
      - rm -rf release
      - rm -rf {{ .SWAGGER_DOCS_DIR }}

  gen-swag:
    cmds:
      - go tool swag fmt
      - go tool swag init -g internal/http/http.go -o {{ .SWAGGER_DOCS_DIR }}

  gen-i8n:
    cmds:
      - npm run locales --prefix ui

  fmt-ui:
    deps: [ gen-i8n ]
    cmds:
      - npm run format --prefix ui

  fmt-e2e:
    cmds:
      - npm run format --prefix e2e

  fmt-go:
    deps: [ gen-swag ]
    cmds:
      - go tool goimports -w .

  format:
    deps: [ fmt-go, fmt-ui, fmt-e2e ]

  test-go:
    cmds:
      - go test -v ./... | grep -v {{ .SWAGGER_DOCS_DIR }}

  build-ui:
    deps: [ fmt-ui ]
    cmds:
      - npm run build --prefix ui

  build-go:
    deps: [ fmt-go ]
    cmds:
      - go build -o thunderdome-planning-poker -v

  build-linux:
    deps: [ gen-swag, build-ui ]
    cmds:
      - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o {{.BINARY_LINUX}} -v

  build-windows:
    deps: [ gen-swag, build-ui ]
    cmds:
      - CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o {{.BINARY_WINDOWS}} -v

  build:
    deps: [ fmt-go, build-ui ]
    cmds:
      - go build -o thunderdome-planning-poker -v

  dev:
    deps: [ build-ui ]
    cmds:
      - task: build
      - HTTP_SECURE_PROTOCOL="false" SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="localhost" COOKIE_SECURE="false" ./{{.BINARY_NAME}} live

  dev-go:
    cmds:
      - task: build-go
      - HTTP_SECURE_PROTOCOL="false" SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="localhost" COOKIE_SECURE="false" ./{{.BINARY_NAME}} live

  dev-secure:
    cmds:
      - task: build
      - caddy start --config build/dev.caddyfile
      - SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="thunderdome.localhost" ./{{.BINARY_NAME}} live

  dev-secure-go:
    cmds:
      - task: build-go
      - caddy start --config build/dev.caddyfile
      - SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="thunderdome.localhost" ./{{.BINARY_NAME}} live

  windows-dev-secure-go:
    cmds:
      - task: build-go
      - caddy start --config build/dev.caddyfile
      - SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="thunderdome.localhost" ./{{.BINARY_WINDOWS}} live

  run:
    cmds:
      - HTTP_SECURE_PROTOCOL="false" SMTP_ENABLED="false" DB_HOST="localhost" APP_DOMAIN="localhost" COOKIE_SECURE="false" ./$(BINARY_NAME)
